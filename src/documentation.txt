-1. Emulate a simple HTTP server
Command: python -m SimpleHTTPServer

2. Initialize angular
   top html tag
   <html ng-app>

3. Conditional (ng-if)
4. classes(ng-class)
5. Create a Angular app.
  a. Create a app folder inside js
  b. create two file "app.config.js", "app.module.js"
  c. Initialise the app make changes in the file and update appropriate changes in index.html file
  d. Include the JS files in the mail index.HTML

6. Create a Controller
  a. Create a folder inside app folder.. blog-list
  b. Inside the blog-list folder create two files "blog-list.component.js", "blog-list.module.js".
  c. Initialise the app make changes in the file and update appropriate changes in index.html and app.module.js file
  d. Include the JS files in the mail index.HTML

6. Create a Component
sample component syntax
component('nameofcomponent', {
  template:
  templateUrl:
  controller: function($scope){}
});

7. TemplateURL in component
      a. add templateUrl Field in component
      b. Create a templates folder under src folder
      c. Create all HTML files under the template folder


8. Looping in template with Ng-repeat
ng-repeat is used to loop through the array element.
Use case:

html:
<ul>
  <li ng-repeat="{{ item in items}}"></li>
</ul>

Controller:
var blogItems = [{}, {}, {}]
$scope.items = blogItems;


9. Webserver for javascript Apps.
Refer the guide on the Github Page (Coding for Entrepreneur):
https://github.com/codingforentrepreneurs/Guides/blob/master/all/angular_webserver.md


10. URL Routing Setup

  1. Include angular-route.js javascript in index.html
  2. Include angular-resource javascript in index.html
  3. Recheck the javascript link in head of html
  4. Update App module with ngresource and ngroute
  5. Update App config with routeProvider, locationProvider
  6. Update index.html with div ng-view
  7. update index.html with base tag

11. URL Routing: using templateUrl

12: URL Routing 3:
Using services '$routeParams' to optimise the code

13: Detail view with parameter.
 1. under app folder create a folder "blog-detail"
 2. create and Update two file blog-detail.component.js and blog-details.module.js
 3. Update the app.module.js file
 4.  Make the appropriate changes in index.html(Update JS files)

14: For each loop in angularjs
  1 angular.forEach(<name_of_array>, function(iterator))
     {

     }
  2. Update blog-detail.html

15: HTTP Request in Angular JS $http service
  1. Create a folder by json and a file posts.json and update the json file
  2. In Config File.ru add :urls "/json"
  3. add service $http in controller(blog-detail.component.js)
  4. $http.get("Location_of_json_file").when(success_method, error_method)
  5. sucess(response, status, config, statusText)
  6. Update the success function

16: Angular resources
  1. Create a app called Core under app folder
  2. Create a post folder under core.
  3. create a file post.module.js and post.service.js
  4. angular.module().factory($resource)
  5. Update index.html with post.module.js and post.service.js
  6. Use the service in blog-detail.component.js

17: Angular custom directive
  1. Create a utils folder under app
  2. create a folder confirm-click under the utils folder and two files confirm-click.module.js and confirm-click.directive.js
  3. Update index.html with above two js files
  4. Update app.module.js file
  5. add the directive to template folder


18: Use of ngclick

19: Forms and ngSubmit(with the help of comments)
  1. Update comments in json file
  2. Update the Html
  3. ng-submit: takes care of submission of form

20: Delete Comment
  1. create a function delete comment
  2. whats the use of $scope. $apply
